{
  "status": "finished",
  "code": {
    "app": {
      "fileCodes": {
        "src/app/page.tsx": "import Hero from './components/Hero';\nimport About from './components/About';\nimport Projects from './components/Projects';\nimport Skills from './components/Skills';\nimport Contact from './components/Contact';\n\nexport default function Home() {\n  return (\n    <main className=\"min-h-screen bg-gradient-to-b from-gray-900 via-gray-800 to-gray-900\">\n      <Hero />\n      <About />\n      <Projects />\n      <Skills />\n      <Contact />\n    </main>\n  );\n}",
        "src/app/layout.tsx": "import type { Metadata } from 'next';\nimport { Inter } from 'next/font/google';\nimport './globals.css';\nimport Navigation from './components/Navigation';\nimport Footer from './components/Footer';\n\nconst inter = Inter({ subsets: ['latin'] });\n\nexport const metadata: Metadata = {\n  title: 'Portfolio - Full Stack Developer',\n  description: 'Professional portfolio showcasing projects and skills',\n};\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"en\" className=\"scroll-smooth\">\n      <body className={inter.className}>\n        <Navigation />\n        {children}\n        <Footer />\n      </body>\n    </html>\n  );\n}",
        "src/app/components/Navigation.tsx": "'use client';\n\nimport { useState } from 'react';\nimport Link from 'next/link';\n\nexport default function Navigation() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const navLinks = [\n    { href: '#home', label: 'Home' },\n    { href: '#about', label: 'About' },\n    { href: '#projects', label: 'Projects' },\n    { href: '#skills', label: 'Skills' },\n    { href: '#contact', label: 'Contact' },\n  ];\n\n  return (\n    <nav className=\"fixed top-0 w-full bg-gray-900/95 backdrop-blur-sm z-50 border-b border-gray-800\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between h-16\">\n          <div className=\"flex items-center\">\n            <Link href=\"/\" className=\"text-2xl font-bold text-white\">\n              Portfolio\n            </Link>\n          </div>\n          <div className=\"hidden md:block\">\n            <div className=\"ml-10 flex items-baseline space-x-4\">\n              {navLinks.map((link) => (\n                <a\n                  key={link.href}\n                  href={link.href}\n                  className=\"text-gray-300 hover:text-white px-3 py-2 rounded-md text-sm font-medium transition-colors\"\n                >\n                  {link.label}\n                </a>\n              ))}\n            </div>\n          </div>\n          <div className=\"md:hidden\">\n            <button\n              onClick={() => setIsOpen(!isOpen)}\n              className=\"text-gray-400 hover:text-white focus:outline-none\"\n            >\n              <svg className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                {isOpen ? (\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                ) : (\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n                )}\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n      {isOpen && (\n        <div className=\"md:hidden\">\n          <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3\">\n            {navLinks.map((link) => (\n              <a\n                key={link.href}\n                href={link.href}\n                className=\"text-gray-300 hover:text-white block px-3 py-2 rounded-md text-base font-medium\"\n                onClick={() => setIsOpen(false)}\n              >\n                {link.label}\n              </a>\n            ))}\n          </div>\n        </div>\n      )}\n    </nav>\n  );\n}",
        "src/app/components/Hero.tsx": "export default function Hero() {\n  return (\n    <section id=\"home\" className=\"min-h-screen flex items-center justify-center px-4 pt-16\">\n      <div className=\"text-center\">\n        <h1 className=\"text-5xl md:text-7xl font-bold text-white mb-6\">\n          Hi, I'm <span className=\"text-blue-500\">Jane Smith</span>\n        </h1>\n        <p className=\"text-xl md:text-2xl text-gray-300 mb-8\">\n          Senior Full Stack Developer\n        </p>\n        <p className=\"text-lg text-gray-400 max-w-2xl mx-auto mb-12\">\n          Passionate about creating elegant solutions to complex problems. Specializing in modern web technologies and scalable applications.\n        </p>\n        <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n          <a\n            href=\"#projects\"\n            className=\"px-8 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-medium\"\n          >\n            View My Work\n          </a>\n          <a\n            href=\"#contact\"\n            className=\"px-8 py-3 border border-gray-600 text-white rounded-lg hover:bg-gray-800 transition-colors font-medium\"\n          >\n            Get In Touch\n          </a>\n        </div>\n      </div>\n    </section>\n  );\n}",
        "src/app/components/About.tsx": "import { getAbout } from '../utils/data';\n\nexport default async function About() {\n  let about = null;\n  let error = null;\n\n  try {\n    about = await getAbout();\n  } catch (err) {\n    error = err instanceof Error ? err.message : 'Failed to load about information';\n  }\n\n  return (\n    <section id=\"about\" className=\"py-20 px-4\">\n      <div className=\"max-w-6xl mx-auto\">\n        <h2 className=\"text-4xl font-bold text-white text-center mb-12\">About Me</h2>\n        {error ? (\n          <div className=\"text-center text-gray-400\">\n            <p>Unable to load about information at this time.</p>\n          </div>\n        ) : about ? (\n          <div className=\"grid md:grid-cols-2 gap-12 items-center\">\n            <div>\n              <img\n                src={about.profileImage || 'https://images.unsplash.com/photo-1573496359142-b8d87734a5a2?w=400'}\n                alt={about.name}\n                className=\"rounded-lg shadow-xl w-full max-w-md mx-auto\"\n              />\n            </div>\n            <div>\n              <h3 className=\"text-2xl font-semibold text-white mb-4\">{about.name}</h3>\n              <p className=\"text-xl text-blue-400 mb-4\">{about.title}</p>\n              <p className=\"text-gray-300 mb-6 leading-relaxed\">\n                {about.bio}\n              </p>\n              {about.resume && (\n                <a\n                  href={about.resume}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"inline-flex items-center px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n                >\n                  Download Resume\n                  <svg className=\"ml-2 w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                  </svg>\n                </a>\n              )}\n            </div>\n          </div>\n        ) : (\n          <div className=\"text-center\">\n            <div className=\"grid md:grid-cols-2 gap-12 items-center\">\n              <div>\n                <img\n                  src=\"https://images.unsplash.com/photo-1573496359142-b8d87734a5a2?w=400\"\n                  alt=\"Profile\"\n                  className=\"rounded-lg shadow-xl w-full max-w-md mx-auto\"\n                />\n              </div>\n              <div className=\"text-left\">\n                <h3 className=\"text-2xl font-semibold text-white mb-4\">Jane Smith</h3>\n                <p className=\"text-xl text-blue-400 mb-4\">Senior Full Stack Developer</p>\n                <p className=\"text-gray-300 mb-6 leading-relaxed\">\n                  With over 8 years of experience in web development, I specialize in building scalable, user-friendly applications using modern technologies. My passion lies in solving complex problems and creating elegant solutions that make a difference.\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n}",
        "src/app/components/Projects.tsx": "import { getProjects } from '../utils/data';\nimport ProjectCard from './ProjectCard';\n\nexport default async function Projects() {\n  let projects = [];\n  let error = null;\n\n  try {\n    projects = await getProjects();\n  } catch (err) {\n    error = err instanceof Error ? err.message : 'Failed to load projects';\n  }\n\n  const defaultProjects = [\n    {\n      id: '1',\n      title: 'E-Commerce Platform',\n      description: 'Full-stack e-commerce solution with React, Node.js, and MongoDB',\n      technologies: ['React', 'Node.js', 'MongoDB', 'Stripe'],\n      imageUrl: 'https://images.unsplash.com/photo-1556742049-0cfed4f6a45d?w=600',\n      liveUrl: 'https://example.com',\n      githubUrl: 'https://github.com',\n      featured: true,\n      createdAt: '2024-01-01T00:00:00Z'\n    },\n    {\n      id: '2',\n      title: 'Task Management App',\n      description: 'Collaborative task management tool with real-time updates',\n      technologies: ['Vue.js', 'Express', 'PostgreSQL', 'Socket.io'],\n      imageUrl: 'https://images.unsplash.com/photo-1611224923853-80b023f02d71?w=600',\n      liveUrl: 'https://example.com',\n      githubUrl: 'https://github.com',\n      featured: false,\n      createdAt: '2024-01-01T00:00:00Z'\n    },\n    {\n      id: '3',\n      title: 'Analytics Dashboard',\n      description: 'Real-time analytics dashboard with data visualization',\n      technologies: ['Next.js', 'TypeScript', 'D3.js', 'Python'],\n      imageUrl: 'https://images.unsplash.com/photo-1551288049-bebda4e38f71?w=600',\n      liveUrl: 'https://example.com',\n      githubUrl: 'https://github.com',\n      featured: true,\n      createdAt: '2024-01-01T00:00:00Z'\n    }\n  ];\n\n  const displayProjects = projects.length > 0 ? projects : defaultProjects;\n\n  return (\n    <section id=\"projects\" className=\"py-20 px-4 bg-gray-800/50\">\n      <div className=\"max-w-6xl mx-auto\">\n        <h2 className=\"text-4xl font-bold text-white text-center mb-12\">Featured Projects</h2>\n        {error && (\n          <div className=\"text-center text-yellow-400 mb-8\">\n            <p>Using sample projects. Backend connection unavailable.</p>\n          </div>\n        )}\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {displayProjects.map((project) => (\n            <ProjectCard key={project.id} project={project} />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}",
        "src/app/components/ProjectCard.tsx": "import { Project } from '../utils/data';\n\ninterface ProjectCardProps {\n  project: Project;\n}\n\nexport default function ProjectCard({ project }: ProjectCardProps) {\n  return (\n    <div className=\"bg-gray-900 rounded-lg overflow-hidden shadow-xl hover:shadow-2xl transition-shadow\">\n      <img\n        src={project.imageUrl}\n        alt={project.title}\n        className=\"w-full h-48 object-cover\"\n      />\n      <div className=\"p-6\">\n        <h3 className=\"text-xl font-semibold text-white mb-2\">{project.title}</h3>\n        <p className=\"text-gray-400 mb-4\">{project.description}</p>\n        <div className=\"flex flex-wrap gap-2 mb-4\">\n          {project.technologies.map((tech) => (\n            <span\n              key={tech}\n              className=\"px-3 py-1 bg-gray-800 text-blue-400 text-sm rounded-full\"\n            >\n              {tech}\n            </span>\n          ))}\n        </div>\n        <div className=\"flex gap-4\">\n          {project.liveUrl && (\n            <a\n              href={project.liveUrl}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"text-blue-400 hover:text-blue-300 transition-colors\"\n            >\n              Live Demo →\n            </a>\n          )}\n          {project.githubUrl && (\n            <a\n              href={project.githubUrl}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"text-gray-400 hover:text-white transition-colors\"\n            >\n              GitHub →\n            </a>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}",
        "src/app/components/Skills.tsx": "import { getSkills } from '../utils/data';\nimport SkillBar from './SkillBar';\n\nexport default async function Skills() {\n  let skills = [];\n  let error = null;\n\n  try {\n    skills = await getSkills();\n  } catch (err) {\n    error = err instanceof Error ? err.message : 'Failed to load skills';\n  }\n\n  const defaultSkills = [\n    { id: '1', name: 'JavaScript', category: 'Programming Languages', proficiency: 95, icon: 'js-icon', yearsOfExperience: 8 },\n    { id: '2', name: 'TypeScript', category: 'Programming Languages', proficiency: 90, icon: 'ts-icon', yearsOfExperience: 5 },\n    { id: '3', name: 'React', category: 'Frontend', proficiency: 95, icon: 'react-icon', yearsOfExperience: 6 },\n    { id: '4', name: 'Node.js', category: 'Backend', proficiency: 85, icon: 'node-icon', yearsOfExperience: 5 },\n    { id: '5', name: 'Python', category: 'Programming Languages', proficiency: 80, icon: 'python-icon', yearsOfExperience: 4 },\n    { id: '6', name: 'MongoDB', category: 'Database', proficiency: 85, icon: 'mongo-icon', yearsOfExperience: 4 },\n  ];\n\n  const displaySkills = skills.length > 0 ? skills : defaultSkills;\n  const categories = Array.from(new Set(displaySkills.map(skill => skill.category)));\n\n  return (\n    <section id=\"skills\" className=\"py-20 px-4\">\n      <div className=\"max-w-6xl mx-auto\">\n        <h2 className=\"text-4xl font-bold text-white text-center mb-12\">Skills & Expertise</h2>\n        {error && (\n          <div className=\"text-center text-yellow-400 mb-8\">\n            <p>Using sample skills. Backend connection unavailable.</p>\n          </div>\n        )}\n        <div className=\"space-y-12\">\n          {categories.map((category) => (\n            <div key={category}>\n              <h3 className=\"text-2xl font-semibold text-blue-400 mb-6\">{category}</h3>\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                {displaySkills\n                  .filter(skill => skill.category === category)\n                  .map((skill) => (\n                    <SkillBar key={skill.id} skill={skill} />\n                  ))}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}",
        "src/app/components/SkillBar.tsx": "'use client';\n\nimport { useEffect, useState } from 'react';\nimport { Skill } from '../utils/data';\n\ninterface SkillBarProps {\n  skill: Skill;\n}\n\nexport default function SkillBar({ skill }: SkillBarProps) {\n  const [width, setWidth] = useState(0);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setWidth(skill.proficiency);\n    }, 100);\n    return () => clearTimeout(timer);\n  }, [skill.proficiency]);\n\n  return (\n    <div className=\"bg-gray-800 p-4 rounded-lg\">\n      <div className=\"flex justify-between mb-2\">\n        <span className=\"text-white font-medium\">{skill.name}</span>\n        <span className=\"text-gray-400\">{skill.proficiency}%</span>\n      </div>\n      <div className=\"w-full bg-gray-700 rounded-full h-3\">\n        <div\n          className=\"bg-gradient-to-r from-blue-500 to-blue-600 h-3 rounded-full transition-all duration-1000 ease-out\"\n          style={{ width: `${width}%` }}\n        />\n      </div>\n      {skill.yearsOfExperience && (\n        <p className=\"text-sm text-gray-500 mt-2\">{skill.yearsOfExperience} years experience</p>\n      )}\n    </div>\n  );\n}",
        "src/app/components/Contact.tsx": "'use client';\n\nimport { useState } from 'react';\nimport { postContact } from '../utils/data';\n\nexport default function Contact() {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    subject: '',\n    message: ''\n  });\n  const [status, setStatus] = useState<'idle' | 'loading' | 'success' | 'error'>('idle');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setFormData(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setStatus('loading');\n    setErrorMessage('');\n\n    try {\n      await postContact({\n        name: formData.name,\n        email: formData.email,\n        subject: formData.subject,\n        message: formData.message\n      });\n      setStatus('success');\n      setFormData({ name: '', email: '', subject: '', message: '' });\n      setTimeout(() => setStatus('idle'), 5000);\n    } catch (error) {\n      setStatus('error');\n      setErrorMessage(error instanceof Error ? error.message : 'Failed to send message');\n    }\n  };\n\n  return (\n    <section id=\"contact\" className=\"py-20 px-4 bg-gray-800/50\">\n      <div className=\"max-w-4xl mx-auto\">\n        <h2 className=\"text-4xl font-bold text-white text-center mb-12\">Get In Touch</h2>\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          <div className=\"grid md:grid-cols-2 gap-6\">\n            <div>\n              <label htmlFor=\"name\" className=\"block text-gray-300 mb-2\">Name</label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                value={formData.name}\n                onChange={handleChange}\n                required\n                className=\"w-full px-4 py-3 bg-gray-900 border border-gray-700 rounded-lg text-white focus:outline-none focus:border-blue-500 transition-colors\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"email\" className=\"block text-gray-300 mb-2\">Email</label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleChange}\n                required\n                className=\"w-full px-4 py-3 bg-gray-900 border border-gray-700 rounded-lg text-white focus:outline-none focus:border-blue-500 transition-colors\"\n              />\n            </div>\n          </div>\n          <div>\n            <label htmlFor=\"subject\" className=\"block text-gray-300 mb-2\">Subject</label>\n            <input\n              type=\"text\"\n              id=\"subject\"\n              name=\"subject\"\n              value={formData.subject}\n              onChange={handleChange}\n              required\n              className=\"w-full px-4 py-3 bg-gray-900 border border-gray-700 rounded-lg text-white focus:outline-none focus:border-blue-500 transition-colors\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"message\" className=\"block text-gray-300 mb-2\">Message</label>\n            <textarea\n              id=\"message\"\n              name=\"message\"\n              value={formData.message}\n              onChange={handleChange}\n              required\n              rows={6}\n              className=\"w-full px-4 py-3 bg-gray-900 border border-gray-700 rounded-lg text-white focus:outline-none focus:border-blue-500 transition-colors resize-none\"\n            />\n          </div>\n          <div className=\"text-center\">\n            <button\n              type=\"submit\"\n              disabled={status === 'loading'}\n              className=\"px-8 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-medium disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {status === 'loading' ? 'Sending...' : 'Send Message'}\n            </button>\n          </div>\n          {status === 'success' && (\n            <div className=\"text-center text-green-400 mt-4\">\n              Message sent successfully! I'll get back to you soon.\n            </div>\n          )}\n          {status === 'error' && (\n            <div className=\"text-center text-red-400 mt-4\">\n              {errorMessage || 'Failed to send message. Please try again.'}\n            </div>\n          )}\n        </form>\n      </div>\n    </section>\n  );\n}",
        "src/app/components/Footer.tsx": "export default function Footer() {\n  const socialLinks = [\n    { name: 'GitHub', url: 'https://github.com', icon: 'M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z' },\n    { name: 'LinkedIn', url: 'https://linkedin.com', icon: 'M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z' },\n    { name: 'Twitter', url: 'https://twitter.com', icon: 'M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z' }\n  ];\n\n  return (\n    <footer className=\"bg-gray-900 border-t border-gray-800 py-12\">\n      <div className=\"max-w-6xl mx-auto px-4\">\n        <div className=\"flex flex-col md:flex-row justify-between items-center\">\n          <div className=\"mb-6 md:mb-0\">\n            <p className=\"text-gray-400\">\n              © {new Date().getFullYear()} Portfolio. All rights reserved.\n            </p>\n          </div>\n          <div className=\"flex space-x-6\">\n            {socialLinks.map((link) => (\n              <a\n                key={link.name}\n                href={link.url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-gray-400 hover:text-white transition-colors\"\n                aria-label={link.name}\n              >\n                <svg className=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d={link.icon} />\n                </svg>\n              </a>\n            ))}\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}",
        "src/app/utils/data.ts": "export interface About {\n  id: string;\n  name: string;\n  title: string;\n  bio: string;\n  profileImage: string;\n  resume: string;\n  updatedAt: string;\n}\n\nexport interface Contact {\n  id: string;\n  name: string;\n  email: string;\n  subject: string;\n  message: string;\n  status: string;\n  createdAt: string;\n}\n\nexport interface Project {\n  id: string;\n  title: string;\n  description: string;\n  technologies: string[];\n  imageUrl: string;\n  liveUrl: string;\n  githubUrl: string;\n  featured: boolean;\n  createdAt: string;\n}\n\nexport interface Skill {\n  id: string;\n  name: string;\n  category: string;\n  proficiency: number;\n  icon: string;\n  yearsOfExperience: number;\n}\n\nexport interface ContactInput {\n  name: string;\n  email: string;\n  subject: string;\n  message: string;\n}\n\nconst BASE_URL = 'http://localhost:3003';\n\nexport async function getAbout(): Promise<About> {\n  try {\n    const response = await fetch(`${BASE_URL}/api/about`, {\n      next: { revalidate: 60 }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to fetch about data');\n    }\n    return await response.json();\n  } catch (error) {\n    throw new Error('Unable to load about information');\n  }\n}\n\nexport async function getProjects(): Promise<Project[]> {\n  try {\n    const response = await fetch(`${BASE_URL}/api/projects`, {\n      next: { revalidate: 60 }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to fetch projects');\n    }\n    return await response.json();\n  } catch (error) {\n    throw new Error('Unable to load projects');\n  }\n}\n\nexport async function getSkills(): Promise<Skill[]> {\n  try {\n    const response = await fetch(`${BASE_URL}/api/skills`, {\n      next: { revalidate: 60 }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to fetch skills');\n    }\n    return await response.json();\n  } catch (error) {\n    throw new Error('Unable to load skills');\n  }\n}\n\nexport async function postContact(input: ContactInput): Promise<Contact> {\n  try {\n    const response = await fetch(`${BASE_URL}/api/contact`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(input),\n    });\n    if (!response.ok) {\n      throw new Error('Failed to send message');\n    }\n    return await response.json();\n  } catch (error) {\n    throw new Error('Unable to send message. Please try again later.');\n  }\n}",
        "src/app/globals.css": "@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  html {\n    scroll-behavior: smooth;\n  }\n  \n  body {\n    @apply bg-gray-900 text-white;\n  }\n}\n\n@layer components {\n  .container {\n    @apply max-w-7xl mx-auto px-4 sm:px-6 lg:px-8;\n  }\n}\n\n@layer utilities {\n  .text-gradient {\n    @apply bg-gradient-to-r from-blue-400 to-purple-600 bg-clip-text text-transparent;\n  }\n  \n  .animation-delay-200 {\n    animation-delay: 200ms;\n  }\n  \n  .animation-delay-400 {\n    animation-delay: 400ms;\n  }\n}",
        "tailwind.config.js": "/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    './src/pages/**/*.{js,ts,jsx,tsx,mdx}',\n    './src/components/**/*.{js,ts,jsx,tsx,mdx}',\n    './src/app/**/*.{js,ts,jsx,tsx,mdx}',\n  ],\n  theme: {\n    extend: {\n      colors: {\n        gray: {\n          900: '#0f0f0f',\n          800: '#1a1a1a',\n          700: '#2a2a2a',\n          600: '#3a3a3a',\n          500: '#4a4a4a',\n          400: '#6a6a6a',\n          300: '#8a8a8a',\n        },\n      },\n      animation: {\n        'fade-in': 'fadeIn 0.5s ease-in-out',\n        'slide-up': 'slideUp 0.5s ease-out',\n      },\n      keyframes: {\n        fadeIn: {\n          '0%': { opacity: '0' },\n          '100%': { opacity: '1' },\n        },\n        slideUp: {\n          '0%': { transform: 'translateY(20px)', opacity: '0' },\n          '100%': { transform: 'translateY(0)', opacity: '1' },\n        },\n      },\n    },\n  },\n  plugins: [],\n}",
        "next.config.js": "/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  images: {\n    domains: ['images.unsplash.com', 'example.com'],\n  },\n}\n\nmodule.exports = nextConfig"
      },
      "libraries": []
    }
  }
}